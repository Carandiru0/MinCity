/* Copyright (C) 20xx Jason Tully - All Rights Reserved
 * You may use, distribute and modify this code under the
 * terms of the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License
 * http://www.supersinfulsilicon.com/
 *
This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/
or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 */
#pragma once
#ifndef VXLMONO_H
#define VXLMONO_H

#include "globals.h"

 //
 // vxlmono
 // Font Size: 7x6px
 // Created: 17-08-2021
 //
 // 

// 
// Pseudocode for retrieving data for a specific character:
// 
// offset = ascii_code(character) - ascii_code(' ')
// data = vxlmono[lut[offset]]
// 

namespace vxlmono {

	read_only inline unsigned char const data[] = {
		0x00,0x00,0x00,0x00,0x00,0x00, // Character 0x20 (32: ' ')
		0x3F,0x27,0x27,0x3F,0x27,0x3F, // Character 0x21 (33: '!')
		0x3F,0x3F,0x3F,0x3F,0x3F,0x3F, // Character 0x22 (34: '"')
		0x00,0x3F,0x3F,0x3F,0x3F,0x3F, // Character 0x23 (35: '#')
		0x33,0x21,0x3D,0x27,0x21,0x33, // Character 0x24 (36: '$')
		0x3F,0x2D,0x37,0x3B,0x2D,0x3F, // Character 0x25 (37: '%')
		0x00,0x00,0x3F,0x3F,0x3F,0x3F, // Character 0x26 (38: '&')
		0x00,0x00,0x00,0x3F,0x3F,0x3F, // Character 0x27 (39: ''')
		0x00,0x00,0x00,0x00,0x3F,0x3F, // Character 0x28 (40: '(')
		0x00,0x00,0x00,0x00,0x00,0x3F, // Character 0x29 (41: ')')
		0x00,0x00,0x0A,0x04,0x0A,0x00, // Character 0x2a (42: '*')
		0x00,0x00,0x04,0x0E,0x04,0x00, // Character 0x2b (43: '+')
		0x00,0x00,0x00,0x00,0x02,0x02, // Character 0x2c (44: ',')
		0x00,0x00,0x00,0x0E,0x00,0x00, // Character 0x2d (45: '-')
		0x00,0x00,0x00,0x00,0x02,0x00, // Character 0x2e (46: '.')
		0x00,0x10,0x08,0x04,0x02,0x00, // Character 0x2f (47: '/')
		0x3F,0x23,0x2D,0x2D,0x31,0x3F, // Character 0x30 (48: '0')
		0x3F,0x27,0x2F,0x2F,0x2F,0x3F, // Character 0x31 (49: '1')
		0x3F,0x21,0x2F,0x39,0x21,0x3F, // Character 0x32 (50: '2')
		0x3F,0x21,0x2F,0x27,0x21,0x3F, // Character 0x33 (51: '3')
		0x3F,0x2D,0x2D,0x21,0x2F,0x3F, // Character 0x34 (52: '4')
		0x3F,0x21,0x3D,0x27,0x21,0x3F, // Character 0x35 (53: '5')
		0x3F,0x21,0x3D,0x21,0x21,0x3F, // Character 0x36 (54: '6')
		0x3F,0x21,0x2F,0x2F,0x2F,0x3F, // Character 0x37 (55: '7')
		0x3F,0x31,0x25,0x29,0x23,0x3F, // Character 0x38 (56: '8')
		0x3F,0x21,0x2D,0x21,0x2F,0x3F, // Character 0x39 (57: '9')
		0x00,0x00,0x02,0x00,0x02,0x00, // Character 0x3a (58: ':')
		0x1F,0x1F,0x1F,0x1F,0x1F,0x1F, // Character 0x3b (59: ';')
		0x0F,0x0F,0x0F,0x0F,0x0F,0x0F, // Character 0x3c (60: '<')
		0x00,0x00,0x0E,0x00,0x0E,0x00, // Character 0x3d (61: '=')
		0x07,0x07,0x07,0x07,0x07,0x07, // Character 0x3e (62: '>')
		0x3F,0x21,0x25,0x3F,0x27,0x3F, // Character 0x3f (63: '?')
		0x3F,0x27,0x2F,0x2D,0x21,0x3F, // Character 0x40 (64: '@')
		0x00,0x07,0x09,0x0F,0x09,0x00, // Character 0x41 (65: 'A')
		0x00,0x0F,0x07,0x09,0x0F,0x00, // Character 0x42 (66: 'B')
		0x00,0x0F,0x01,0x01,0x0F,0x00, // Character 0x43 (67: 'C')
		0x00,0x07,0x09,0x09,0x07,0x00, // Character 0x44 (68: 'D')
		0x00,0x0F,0x03,0x01,0x0F,0x00, // Character 0x45 (69: 'E')
		0x00,0x0F,0x01,0x07,0x01,0x00, // Character 0x46 (70: 'F')
		0x00,0x0F,0x01,0x0D,0x0F,0x00, // Character 0x47 (71: 'G')
		0x00,0x09,0x09,0x0F,0x09,0x00, // Character 0x48 (72: 'H')
		0x00,0x03,0x03,0x00,0x03,0x00, // Character 0x49 (73: 'I')
		0x00,0x08,0x08,0x08,0x0F,0x00, // Character 0x4a (74: 'J')
		0x00,0x0D,0x03,0x07,0x0D,0x00, // Character 0x4b (75: 'K')
		0x00,0x01,0x01,0x01,0x0F,0x00, // Character 0x4c (76: 'L')
		0x00,0x1B,0x15,0x11,0x11,0x00, // Character 0x4d (77: 'M')
		0x00,0x0F,0x09,0x09,0x09,0x00, // Character 0x4e (78: 'N')
		0x00,0x07,0x09,0x09,0x06,0x00, // Character 0x4f (79: 'O')
		0x00,0x0F,0x09,0x0F,0x01,0x00, // Character 0x50 (80: 'P')
		0x00,0x07,0x09,0x0D,0x0E,0x00, // Character 0x51 (81: 'Q')
		0x00,0x0F,0x09,0x07,0x0D,0x00, // Character 0x52 (82: 'R')
		0x00,0x0F,0x01,0x0C,0x0F,0x00, // Character 0x53 (83: 'S')
		0x00,0x1F,0x04,0x04,0x04,0x00, // Character 0x54 (84: 'T')
		0x00,0x09,0x09,0x09,0x0F,0x00, // Character 0x55 (85: 'U')
		0x00,0x09,0x09,0x02,0x06,0x00, // Character 0x56 (86: 'V')
		0x00,0x11,0x11,0x15,0x1B,0x00, // Character 0x57 (87: 'W')
		0x00,0x0D,0x05,0x0A,0x0B,0x00, // Character 0x58 (88: 'X')
		0x00,0x11,0x1B,0x04,0x04,0x00, // Character 0x59 (89: 'Y')
		0x00,0x0F,0x0C,0x03,0x0F,0x00, // Character 0x5a (90: 'Z')
		0x07,0x01,0x01,0x01,0x01,0x07, // Character 0x5b (91: '[')
		0x03,0x03,0x03,0x03,0x03,0x03, // Character 0x5c (92: '\')
		0x07,0x04,0x04,0x04,0x04,0x07, // Character 0x5d (93: ']')
		0x01,0x01,0x01,0x01,0x01,0x01, // Character 0x5e (94: '^')
		0x7F,0x5D,0x6B,0x77,0x7F,0x7F, // Character 0x5f (95: '_')
		0x7F,0x7F,0x5D,0x6B,0x77,0x7F, // Character 0x60 (96: '`')
		0x3F,0x31,0x2D,0x21,0x2D,0x3F, // Character 0x61 (97: 'a')
		0x3F,0x21,0x31,0x2D,0x21,0x3F, // Character 0x62 (98: 'b')
		0x3F,0x21,0x3D,0x3D,0x21,0x3F, // Character 0x63 (99: 'c')
		0x3F,0x31,0x2D,0x2D,0x31,0x3F, // Character 0x64 (100: 'd')
		0x3F,0x21,0x39,0x3D,0x21,0x3F, // Character 0x65 (101: 'e')
		0x3F,0x21,0x3D,0x31,0x3D,0x3F, // Character 0x66 (102: 'f')
		0x3F,0x21,0x3D,0x25,0x21,0x3F, // Character 0x67 (103: 'g')
		0x3F,0x2D,0x2D,0x21,0x2D,0x3F, // Character 0x68 (104: 'h')
		0x3F,0x33,0x33,0x3F,0x33,0x3F, // Character 0x69 (105: 'i')
		0x3F,0x2F,0x2F,0x2F,0x21,0x3F, // Character 0x6a (106: 'j')
		0x3F,0x25,0x39,0x31,0x25,0x3F, // Character 0x6b (107: 'k')
		0x3F,0x3D,0x3D,0x3D,0x21,0x3F, // Character 0x6c (108: 'l')
		0x7F,0x49,0x55,0x5D,0x5D,0x7F, // Character 0x6d (109: 'm')
		0x3F,0x21,0x2D,0x2D,0x2D,0x3F, // Character 0x6e (110: 'n')
		0x3F,0x31,0x2D,0x2D,0x33,0x3F, // Character 0x6f (111: 'o')
		0x3F,0x21,0x2D,0x21,0x3D,0x3F, // Character 0x70 (112: 'p')
		0x3F,0x31,0x2D,0x25,0x23,0x3F, // Character 0x71 (113: 'q')
		0x3F,0x21,0x2D,0x31,0x25,0x3F, // Character 0x72 (114: 'r')
		0x3F,0x21,0x3D,0x27,0x21,0x3F, // Character 0x73 (115: 's')
		0x7F,0x41,0x77,0x77,0x77,0x7F, // Character 0x74 (116: 't')
		0x3F,0x2D,0x2D,0x2D,0x21,0x3F, // Character 0x75 (117: 'u')
		0x3F,0x2D,0x2D,0x3B,0x33,0x3F, // Character 0x76 (118: 'v')
		0x7F,0x5D,0x5D,0x55,0x49,0x7F, // Character 0x77 (119: 'w')
		0x3F,0x25,0x35,0x2B,0x29,0x3F, // Character 0x78 (120: 'x')
		0x7F,0x5D,0x49,0x77,0x77,0x7F, // Character 0x79 (121: 'y')
		0x3F,0x21,0x27,0x39,0x21,0x3F, // Character 0x7a (122: 'z')
		0x7F,0x4D,0x4D,0x4D,0x4D,0x7F, // Character 0x7b (123: '{')
		0x7F,0x59,0x59,0x59,0x59,0x7F, // Character 0x7c (124: '|')
		0x7F,0x4B,0x4B,0x4B,0x4B,0x7F, // Character 0x7d (125: '}')
		0x7F,0x7F,0x7F,0x5D,0x6B,0x77, // Character 0x7e (126: '~')
	};


	read_only inline uint16_t const lut[] = {
		0, // Character 0x20 (32: ' ')
		6, // Character 0x21 (33: '!')
		12, // Character 0x22 (34: '"')
		18, // Character 0x23 (35: '#')
		24, // Character 0x24 (36: '$')
		30, // Character 0x25 (37: '%')
		36, // Character 0x26 (38: '&')
		42, // Character 0x27 (39: ''')
		48, // Character 0x28 (40: '(')
		54, // Character 0x29 (41: ')')
		60, // Character 0x2a (42: '*')
		66, // Character 0x2b (43: '+')
		72, // Character 0x2c (44: ',')
		78, // Character 0x2d (45: '-')
		84, // Character 0x2e (46: '.')
		90, // Character 0x2f (47: '/')
		96, // Character 0x30 (48: '0')
		102, // Character 0x31 (49: '1')
		108, // Character 0x32 (50: '2')
		114, // Character 0x33 (51: '3')
		120, // Character 0x34 (52: '4')
		126, // Character 0x35 (53: '5')
		132, // Character 0x36 (54: '6')
		138, // Character 0x37 (55: '7')
		144, // Character 0x38 (56: '8')
		150, // Character 0x39 (57: '9')
		156, // Character 0x3a (58: ':')
		162, // Character 0x3b (59: ';')
		168, // Character 0x3c (60: '<')
		174, // Character 0x3d (61: '=')
		180, // Character 0x3e (62: '>')
		186, // Character 0x3f (63: '?')
		192, // Character 0x40 (64: '@')
		198, // Character 0x41 (65: 'A')
		204, // Character 0x42 (66: 'B')
		210, // Character 0x43 (67: 'C')
		216, // Character 0x44 (68: 'D')
		222, // Character 0x45 (69: 'E')
		228, // Character 0x46 (70: 'F')
		234, // Character 0x47 (71: 'G')
		240, // Character 0x48 (72: 'H')
		246, // Character 0x49 (73: 'I')
		252, // Character 0x4a (74: 'J')
		258, // Character 0x4b (75: 'K')
		264, // Character 0x4c (76: 'L')
		270, // Character 0x4d (77: 'M')
		276, // Character 0x4e (78: 'N')
		282, // Character 0x4f (79: 'O')
		288, // Character 0x50 (80: 'P')
		294, // Character 0x51 (81: 'Q')
		300, // Character 0x52 (82: 'R')
		306, // Character 0x53 (83: 'S')
		312, // Character 0x54 (84: 'T')
		318, // Character 0x55 (85: 'U')
		324, // Character 0x56 (86: 'V')
		330, // Character 0x57 (87: 'W')
		336, // Character 0x58 (88: 'X')
		342, // Character 0x59 (89: 'Y')
		348, // Character 0x5a (90: 'Z')
		354, // Character 0x5b (91: '[')
		360, // Character 0x5c (92: '\')
		366, // Character 0x5d (93: ']')
		372, // Character 0x5e (94: '^')
		378, // Character 0x5f (95: '_')
		384, // Character 0x60 (96: '`')
		390, // Character 0x61 (97: 'a')
		396, // Character 0x62 (98: 'b')
		402, // Character 0x63 (99: 'c')
		408, // Character 0x64 (100: 'd')
		414, // Character 0x65 (101: 'e')
		420, // Character 0x66 (102: 'f')
		426, // Character 0x67 (103: 'g')
		432, // Character 0x68 (104: 'h')
		438, // Character 0x69 (105: 'i')
		444, // Character 0x6a (106: 'j')
		450, // Character 0x6b (107: 'k')
		456, // Character 0x6c (108: 'l')
		462, // Character 0x6d (109: 'm')
		468, // Character 0x6e (110: 'n')
		474, // Character 0x6f (111: 'o')
		480, // Character 0x70 (112: 'p')
		486, // Character 0x71 (113: 'q')
		492, // Character 0x72 (114: 'r')
		498, // Character 0x73 (115: 's')
		504, // Character 0x74 (116: 't')
		510, // Character 0x75 (117: 'u')
		516, // Character 0x76 (118: 'v')
		522, // Character 0x77 (119: 'w')
		528, // Character 0x78 (120: 'x')
		534, // Character 0x79 (121: 'y')
		540, // Character 0x7a (122: 'z')
		546, // Character 0x7b (123: '{')
		552, // Character 0x7c (124: '|')
		558, // Character 0x7d (125: '}')
		564, // Character 0x7e (126: '~')
	};

} // end ns

#endif // VXLMONO_H

